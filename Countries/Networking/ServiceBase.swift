//
//  ServiceBAse.swift
//  Countries
//
//  Created by Emin on 16.09.2022.
//

import Foundation


/// Service Base Protocol
protocol ServiceBase {
    var baseURL: String { get }
    var path: String { get }
    var parameters: [String:Any]? { get }
    var method: ServiceMethod { get }
}


extension ServiceBase {
    public var urlRequest: URLRequest? {
        guard let url = self.url else {
            // Prevent incorrect url generations on development time.
            print("Missing URL for route: \(self)")
            return nil
        }
        
        var request = URLRequest(url: url)
        request.httpMethod = method.rawValue
        return request
    }
    
    /// Base API url that will be used all requests.
    var baseURL: String {
        return "https://restcountries.com"
    }
    
    
    /// Completed url generated by baseURL, path and querry parameters.
    var url: URL? {
        var urlComponents = URLComponents(string: baseURL)
        urlComponents?.path = path
        
        if method == .get {
            // add query items to url
            guard let parameters = parameters as? [String: String] else {
                print("We can't add body to GET request")
                return nil
            }
            urlComponents?.queryItems = parameters.map { URLQueryItem(name: $0.key, value: $0.value) }
        }
        
        return urlComponents?.url
    }
}

/// Required service methods for rest API
enum ServiceMethod: String {
    case get = "GET"
    case post = "POST"
    case put = "PUT"
    case delete = "DELETE"
}

